// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Order {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  total Float
  userId     Int      // Foreign key reference to the User model
  user       User     @relation(fields: [userId], references: [id])
  products   OrderProduct[]
}

model User {
  id Int @id @default(autoincrement())
  name String?
  auth0Id      String   @unique @default("")
  email String @unique
  phone String? @unique
  address String?
  orders Order[]
  reviews Review[]
}

model Product {
  id         Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name       String
  description String?
  price      Float
  orders     OrderProduct[]
  reviews Review[]
}

model OrderProduct {
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     // Additional field to store quantity of each product

  @@id([orderId, productId])
}

model Review {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  content     String
  rating      Int
  userId      Int      // Foreign key reference to the User model
  productId   Int      // Foreign key reference to the Product model
  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

